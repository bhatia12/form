{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/form/src/App.js\";\nimport React, { Component } from \"react\";\nimport Modal from 'react-modal';\nimport \"./App.css\";\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        const {\n          name,\n          phone,\n          email,\n          address\n        } = this.state;\n        alert(`Your state values: \\n\n              Name: ${name} \\n\n              Phone:${phone} \\n\n              Email: ${email} \\n\n              Address: ${address}`);\n        console.log(`\n        --SUBMITTING--\n        First Name: ${this.state.name}\n        Phone: ${this.state.phone}\n        Email: ${this.state.email}\n        Password: ${this.state.password}\n        Address: ${this.state.address}\n      `);\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"name\":\n          formErrors.name = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"phone\":\n          formErrors.phone = value.length <= 11 ? \"invalid phone no.\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n          break;\n\n        case \"address\":\n          formErrors.address = value.length < 3 ? \"address is required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      name: null,\n      phone: null,\n      email: null,\n      password: null,\n      address: null,\n      formErrors: {\n        name: \"\",\n        phone: \"\",\n        email: \"\",\n        password: \"\",\n        address: \"\"\n      }\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Contact Us\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: formErrors.name.length > 0 ? \"error\" : null,\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"name\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), formErrors.name.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, formErrors.name)), React.createElement(\"div\", {\n      className: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"input\", {\n      className: formErrors.phone.length > 0 ? \"error\" : null,\n      placeholder: \"Phone\",\n      type: \"text\",\n      name: \"phone\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), formErrors.phone.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, formErrors.phone)), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, formErrors.email)), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(\"div\", {\n      className: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"textarea\", {\n      className: formErrors.address.length > 0 ? \"error\" : null,\n      placeholder: \"Address\",\n      type: \"text\",\n      name: \"address\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), formErrors.address.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, formErrors.address)), React.createElement(\"div\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/shubham/Desktop/form/src/App.js"],"names":["React","Component","Modal","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","App","constructor","props","handleSubmit","e","preventDefault","state","name","phone","email","address","alert","console","log","password","error","handleChange","value","target","test","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from 'react-modal';\nimport \"./App.css\";\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: null,\n      phone: null,\n      email: null,\n      password: null,\n      address: null,\n      formErrors: {\n        name: \"\",\n        phone: \"\",\n        email: \"\",\n        password: \"\",\n        address: \"\"\n      }\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n\n\n    if (formValid(this.state)) {\n      const { name,phone, email,address, } = this.state;\n      alert(`Your state values: \\n\n              Name: ${name} \\n\n              Phone:${phone} \\n\n              Email: ${email} \\n\n              Address: ${address}`\n              )\n      console.log(`\n        --SUBMITTING--\n        First Name: ${this.state.name}\n        Phone: ${this.state.phone}\n        Email: ${this.state.email}\n        Password: ${this.state.password}\n        Address: ${this.state.address}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n  };\n\n\n\n\n  handleChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = {...this.state.formErrors };\n\n    switch (name) {\n      case \"name\":\n        formErrors.name =\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        break;\n      case \"phone\":\n        formErrors.phone =\n          value.length <= 11 ? \"invalid phone no.\" : \"\";\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n        case \"address\":\n          formErrors.address =\n            value.length < 3 ? \"address is required\" : \"\";\n          break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  };\n\n  render() {\n    const { formErrors } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"form-wrapper\">\n          <h1>Contact Us</h1>\n          <form onSubmit={this.handleSubmit} noValidate>\n            <div className=\"name\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                className={formErrors.name.length > 0 ? \"error\" : null}\n                placeholder=\"Name\"\n                type=\"text\"\n                name=\"name\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.name.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.name}</span>\n              )}\n            </div>\n            <div className=\"phone\">\n              <label htmlFor=\"phone\">Phone</label>\n              <input\n                className={formErrors.phone.length > 0 ? \"error\" : null}\n                placeholder=\"Phone\"\n                type=\"text\"\n                name=\"phone\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.phone.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.phone}</span>\n              )}\n            </div>\n            <div className=\"email\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                className={formErrors.email.length > 0 ? \"error\" : null}\n                placeholder=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.email.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.email}</span>\n              )}\n            </div>\n            <div className=\"password\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                className={formErrors.password.length > 0 ? \"error\" : null}\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.password.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.password}</span>\n              )}\n            </div>\n            <div className=\"address\">\n              <label htmlFor=\"address\">Address</label>\n              <textarea\n                className={formErrors.address.length > 0 ? \"error\" : null}\n                placeholder=\"Address\"\n                type=\"text\"\n                name=\"address\"\n                noValidate\n                onChange={this.handleChange}\n              />\n            {formErrors.address.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.address}</span>\n              )}\n            </div>\n            <div className=\"submit\">\n              <button type=\"submit\">Submit</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}