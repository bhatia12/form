{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Desktop/form/src/App.js\";\nimport React, { Component } from \"react\";\nimport Modal from 'react-modal';\nimport \"./App.css\";\n\nfunction validate(name, email, password) {\n  // we are going to store errors for all fields\n  // in a signle array\n  const errors = [];\n\n  if (name.length === 0) {\n    errors.push(\"Name can't be empty\");\n  }\n\n  if (email.length < 5) {\n    errors.push(\"Email should be at least 5 charcters long\");\n  }\n\n  if (email.split(\"\").filter(x => x === \"@\").length !== 1) {\n    errors.push(\"Email should contain a @\");\n  }\n\n  if (email.indexOf(\".\") === -1) {\n    errors.push(\"Email should contain at least one dot\");\n  }\n\n  if (password.length < 6) {\n    errors.push(\"Password should be at least 6 characters long\");\n  }\n\n  return errors;\n}\n\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\nconst customStyle = {\n  overlay: {\n    position: 'fixed',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0\n  },\n  content: {\n    position: 'relative',\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    padding: '5% 5% 2.8% 2.8%',\n    width: '35%',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    display: 'flex'\n  }\n};\nconst phoneRegex = RegExp(/^(\\+91[\\-\\s]?)?[0]?(91)?[7896]\\d{9}$/);\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = validate(name, email, password);\n\n      if (errors.length > 0) {\n        this.setState({\n          errors\n        });\n        return;\n      }\n\n      if (formValid(this.state)) {\n        this.setState({\n          isActive: !this.state.isActive\n        }); // const { name,phone, email,address, } = this.state;\n        // alert(`Your state values: \\n\n        //         Name: ${name} \\n\n        //         Phone:${phone} \\n\n        //         Email: ${email} \\n\n        //         Address: ${address}`\n        //         )\n\n        console.log(`\n        --SUBMITTING--\n        First Name: ${this.state.name}\n        Phone: ${this.state.phone}\n        Email: ${this.state.email}\n        Password: ${this.state.password}\n        Address: ${this.state.address}\n      `);\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"name\":\n          formErrors.name = value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n          break;\n\n        case \"phone\":\n          formErrors.phone = phoneRegex.test(value) ? \"\" : \"invalid phone no\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n          break;\n\n        case \"address\":\n          formErrors.address = value.length < 3 ? \"address is required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => console.log(this.state));\n    };\n\n    this.state = {\n      name: null,\n      phone: null,\n      email: null,\n      password: null,\n      address: null,\n      isActive: false,\n      errors: [],\n      formErrors: {\n        name: \"\",\n        phone: \"\",\n        email: \"\",\n        password: \"\",\n        address: \"\"\n      }\n    };\n  }\n\n  componentWillMount() {\n    Modal.setAppElement('body');\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Contact Us\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: formErrors.name.length > 0 ? \"error\" : null,\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"name\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), formErrors.name.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, formErrors.name)), React.createElement(\"div\", {\n      className: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Phone\"), React.createElement(\"input\", {\n      className: formErrors.phone.length > 0 ? \"error\" : null,\n      placeholder: \"Phone\",\n      type: \"text\",\n      name: \"phone\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), formErrors.phone.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, formErrors.phone)), React.createElement(\"div\", {\n      className: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      className: formErrors.email.length > 0 ? \"error\" : null,\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), formErrors.email.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, formErrors.email)), React.createElement(\"div\", {\n      className: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: formErrors.password.length > 0 ? \"error\" : null,\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), formErrors.password.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, formErrors.password)), React.createElement(\"div\", {\n      className: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"textarea\", {\n      className: formErrors.address.length > 0 ? \"error\" : null,\n      placeholder: \"Address\",\n      type: \"text\",\n      name: \"address\",\n      noValidate: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }), formErrors.address.length > 0 && React.createElement(\"span\", {\n      className: \"errorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, formErrors.address)), React.createElement(\"div\", {\n      className: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Modal, {\n      onRequestClose: this.handleSubmit,\n      isOpen: this.state.isActive,\n      style: customStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"aftersubmit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Name:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, this.state.name)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"Phone:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, this.state.phone)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, this.state.email)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Address:\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, this.state.address))))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/shubham/Desktop/form/src/App.js"],"names":["React","Component","Modal","validate","name","email","password","errors","length","push","split","filter","x","indexOf","emailRegex","RegExp","customStyle","overlay","position","top","bottom","right","left","content","padding","width","marginRight","transform","display","phoneRegex","formValid","formErrors","rest","valid","Object","values","forEach","val","App","constructor","props","handleSubmit","e","preventDefault","setState","state","isActive","console","log","phone","address","error","handleChange","value","target","test","componentWillMount","setAppElement","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from 'react-modal';\nimport \"./App.css\";\n\nfunction validate(name, email, password) {\n  // we are going to store errors for all fields\n  // in a signle array\n  const errors = [];\n\n  if (name.length === 0) {\n    errors.push(\"Name can't be empty\");\n  }\n\n  if (email.length < 5) {\n    errors.push(\"Email should be at least 5 charcters long\");\n  }\n  if (email.split(\"\").filter(x => x === \"@\").length !== 1) {\n    errors.push(\"Email should contain a @\");\n  }\n  if (email.indexOf(\".\") === -1) {\n    errors.push(\"Email should contain at least one dot\");\n  }\n\n  if (password.length < 6) {\n    errors.push(\"Password should be at least 6 characters long\");\n  }\n\n  return errors;\n}\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\nconst customStyle = {\n  overlay : {\n    position: 'fixed',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0\n  },\n  content : {\n    position:'relative',\n    top  : '50%',\n    left : '50%',\n    right : 'auto',\n    bottom : 'auto',\n    padding: '5% 5% 2.8% 2.8%',\n    width : '35%',\n    marginRight : '-50%',\n    transform : 'translate(-50%, -50%)',\n    display : 'flex'\n  }\n}\nconst phoneRegex = RegExp(/^(\\+91[\\-\\s]?)?[0]?(91)?[7896]\\d{9}$/);\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: null,\n      phone: null,\n      email: null,\n      password: null,\n      address: null,\n      isActive:false,\n      errors: [],\n      formErrors: {\n        name: \"\",\n        phone: \"\",\n        email: \"\",\n        password: \"\",\n        address: \"\"\n      }\n    };\n  }\n\n  componentWillMount(){\n    Modal.setAppElement('body');\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const errors = validate(name, email, password);\n    if (errors.length > 0) {\n      this.setState({ errors });\n      return;\n    }\n\n\n\n    if (formValid(this.state)) {\n      this.setState({\n        isActive:!this.state.isActive\n      })\n\n\n\n\n\n\n      // const { name,phone, email,address, } = this.state;\n      // alert(`Your state values: \\n\n      //         Name: ${name} \\n\n      //         Phone:${phone} \\n\n      //         Email: ${email} \\n\n      //         Address: ${address}`\n      //         )\n      console.log(`\n        --SUBMITTING--\n        First Name: ${this.state.name}\n        Phone: ${this.state.phone}\n        Email: ${this.state.email}\n        Password: ${this.state.password}\n        Address: ${this.state.address}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n  };\n\n\n\n\n  handleChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = {...this.state.formErrors };\n\n    switch (name) {\n      case \"name\":\n        formErrors.name =\n          value.length < 3 ? \"minimum 3 characaters required\" : \"\";\n        break;\n      case \"phone\":\n        formErrors.phone =\n          phoneRegex.test(value)? \"\" : \"invalid phone no\";\n        break;\n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 6 ? \"minimum 6 characaters required\" : \"\";\n        break;\n        case \"address\":\n          formErrors.address =\n            value.length < 3 ? \"address is required\" : \"\";\n          break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  };\n\n  render() {\n    const { formErrors } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"form-wrapper\">\n          <h1>Contact Us</h1>\n          <form onSubmit={this.handleSubmit} noValidate>\n            <div className=\"name\">\n              <label htmlFor=\"name\">Name</label>\n              <input\n                className={formErrors.name.length > 0 ? \"error\" : null}\n                placeholder=\"Name\"\n                type=\"text\"\n                name=\"name\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.name.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.name}</span>\n              )}\n            </div>\n            <div className=\"phone\">\n              <label htmlFor=\"phone\">Phone</label>\n              <input\n                className={formErrors.phone.length > 0 ? \"error\" : null}\n                placeholder=\"Phone\"\n                type=\"text\"\n                name=\"phone\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.phone.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.phone}</span>\n              )}\n            </div>\n            <div className=\"email\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                className={formErrors.email.length > 0 ? \"error\" : null}\n                placeholder=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.email.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.email}</span>\n              )}\n            </div>\n            <div className=\"password\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                className={formErrors.password.length > 0 ? \"error\" : null}\n                placeholder=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                noValidate\n                onChange={this.handleChange}\n              />\n              {formErrors.password.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.password}</span>\n              )}\n            </div>\n            <div className=\"address\">\n              <label htmlFor=\"address\">Address</label>\n              <textarea\n                className={formErrors.address.length > 0 ? \"error\" : null}\n                placeholder=\"Address\"\n                type=\"text\"\n                name=\"address\"\n                noValidate\n                onChange={this.handleChange}\n              />\n            {formErrors.address.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.address}</span>\n              )}\n            </div>\n            <div className=\"submit\">\n              <button type=\"submit\">Submit</button>\n              <Modal\n                onRequestClose={this.handleSubmit}\n                isOpen={this.state.isActive}\n                style={customStyle}>\n                <div className=\"aftersubmit\">\n                  <tr>\n                    <td>Name:</td>\n                    <td>{this.state.name}</td>\n                  </tr>\n                  <tr>\n                    <td>Phone:</td>\n                    <td>{this.state.phone}</td>\n                  </tr>\n                  <tr>\n                    <td>Email:</td>\n                    <td>{this.state.email}</td>\n                  </tr>\n                  <tr>\n                    <td>Address:</td>\n                    <td>{this.state.address}</td>\n                  </tr>\n                </div>\n              </Modal>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}